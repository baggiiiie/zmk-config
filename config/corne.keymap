/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {

    behaviors {
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_tog";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {

            bindings = <
&kp TAB             &kp Q       &kp W       &kp F           &kp P            &kp B        &kp J           &kp L             &kp U           &kp Y          &kp APOSTROPHE       &kp LG(SPACE)
&mt LGUI ESCAPE     &kp A       &kp R       &kp S           &mt LGUI T       &kp G        &kp M           &mt RGUI N        &kp E           &kp I          &kp O                &kp ENTER
&mo 3               &kp Z       &kp X       &kp C           &kp D            &kp V        &kp K           &kp H             &kp COMMA       &kp DOT        &kp FSLH             &mo_tog 4
                                            &mt LALT TAB    &mo 1            &kp SPACE    &kp LEFT_SHIFT  &lt 2 BACKSPACE   &mt LEFT_CONTROL ESCAPE
            >;
        };

        lower_layer {

            bindings = <
&kp GRAVE      &kp LS(GRAVE)     &kp LS(LEFT_BRACKET)  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE         &kp PLUS           &kp N7  &kp N8   &kp N9  &kp ASTERISK  &trans
&trans         &kp LA(DELETE)    &kp LG(GRAVE)         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER        &kp MINUS          &kp N4  &kp N5   &kp N6  &kp N0        &trans
&trans         &kp LC(NUMBER_1)  &kp LC(NUMBER_2)      &kp LC(TAB)           &kp LG(TAB)            &kp BACKSLASH    &kp EQUAL          &kp N1  &kp N2   &kp N3  &trans        &trans
                                                       &trans                &trans                 &trans           &trans             &kp LA(BACKSPACE)  &kp DOT
            >;
        };

        raise_layer {

            bindings = <
&kp TAB         &kp EXCL         &kp AT             &kp HASH                &kp DLLR                &kp PRCNT    &kp CARET      &kp AMPS            &kp KP_MULTIPLY     &kp SEMI        &kp COLON          &trans
&trans          &kp DELETE       &trans             &kp LEFT_BRACKET        &kp RIGHT_BRACKET       &trans       &kp LEFT       &kp DOWN            &kp UP              &kp RIGHT       &kp SINGLE_QUOTE   &trans
&trans          &trans           &trans             &trans                  &trans                  &trans       &kp END        &kp PAGE_DOWN       &kp PAGE_UP         &kp HOME        &kp DOUBLE_QUOTES  &trans
                                                    &trans                  &trans                  &trans       &trans         &trans              &trans
            >;
        };

        layer_3 {
            bindings = <
&kp F11         &kp F1              &kp F2                &kp F3                &kp F4          &kp F5            &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F12
&bootloader     &trans              &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp LG(MINUS)   &kp LG(PLUS)      &mwh SCROLL_RIGHT &mwh SCROLL_UP &mwh SCROLL_DOWN  &mwh SCROLL_LEFT  &trans   &trans
&trans          &kp LS(LG(N1))      &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp C_MUTE      &trans            &trans  &trans  &trans  &trans  &trans   &bootloader
                                                          &kp LS(LG(N2))        &kp LS(LG(N3))  &kp LS(LG(N4))    &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans       &trans          &mwh SCROLL_DOWN      &mmv MOVE_UP          &mwh SCROLL_UP           &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans          &mmv MOVE_LEFT        &mmv MOVE_DOWN        &mmv MOVE_RIGHT          &trans            &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR   &bt BT_SEL 0    &bt BT_SEL 1           &bt BT_SEL 2          &bt BT_SEL 3             &bt BT_SEL 4      &trans  &trans  &trans  &trans  &trans  &trans
                                                   &trans                &mkp RCLK                &mkp LCLK         &trans  &trans  &trans
            >;
        };
    };
};
