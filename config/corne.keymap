/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
 
            bindings = <
&kp GRAVE      &kp LS(GRAVE)     &kp LS(LEFT_BRACKET)  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE         &kp PLUS           &kp N7  &kp N8   &kp N9  &kp ASTERISK  &trans
&trans         &kp LA(DELETE)    &trans                &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER        &kp MINUS          &kp N4  &kp N5   &kp N6  &kp DOT       &trans
&kp LG(GRAVE)  &kp LC(NUMBER_1)  &kp LC(NUMBER_2)      &kp LC(TAB)           &kp LG(TAB)            &kp BACKSLASH    &kp EQUAL          &kp N1  &kp N2   &kp N3  &kp N0        &trans
                          &kp LGUI  &mo 1  &kp SPACE    &kp BACKSPACE  &mo 2  &kp LEFT_SHIFT
            >;
        };

        lower_layer {

            bindings = <
&kp TAB     &kp EXCL      &kp AT        &kp HASH          &kp DLLR           &kp PRCNT    &kp CARET  &kp AMPS       &kp KP_MULTIPLY  &kp SEMI   &kp COLON          &trans
&trans      &kp DELETE    &trans        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans       &kp LEFT   &kp DOWN       &kp UP           &kp RIGHT  &kp SINGLE_QUOTE   &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &trans            &trans             &trans       &kp END    &kp PAGE_DOWN  &kp PAGE_UP      &kp HOME   &kp DOUBLE_QUOTES  &trans
                                        &kp LGUI          &trans             &kp SPACE    &kp RET    &trans         &kp RALT
            >;
        };

        raise_layer {

            bindings = <
&kp F11      &kp F1          &kp F2                &kp F3                &kp F4          &kp F5            &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F12
&bootloader  &trans          &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp LG(MINUS)   &kp LG(PLUS)      &trans  &trans  &trans  &mwh SCROLL_UP  &mmv MOVE_UP   &mkp LCLK
&trans       &kp LS(LG(N1))  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp C_MUTE      &trans            &trans  &trans  &trans  &trans  &trans   &bootloader
                                                   &kp LS(LG(N2))        &kp LS(LG(N3))  &kp LS(LG(N4))    &trans  &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&kp F11      &kp F1          &kp F2                &kp F3                &kp F4          &kp F5            &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F12
&bootloader  &trans          &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp LG(MINUS)   &kp LG(PLUS)      &trans  &trans  &trans  &mwh SCROLL_UP  &mmv MOVE_UP  &mkp LCLK
&trans       &kp LS(LG(N1))  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp C_MUTE      &trans            &trans  &trans  &trans  &trans  &trans   &bootloader
                                                   &kp LS(LG(N2))        &kp LS(LG(N3))  &kp LS(LG(N4))    &trans  &trans  &trans
            >;
        };
    };
};
