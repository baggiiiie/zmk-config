/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB     &kp Q  &kp W  &kp F     &kp P  &kp B        &kp J          &kp L  &kp U           &kp Y    &kp APOSTROPHE  &kp BSPC
&kp ESCAPE  &kp A  &kp R  &kp S     &kp T  &kp G        &kp M          &kp N  &kp E           &kp I    &kp O           &kp ENTER
&mo 3       &kp Z  &kp X  &kp C     &kp D  &kp V        &kp K          &kp H  &kp COMMA       &kp DOT  &kp FSLH        &mo 0
                          &kp LGUI  &mo 1  &kp SPACE    &kp BACKSPACE  &mo 2  &kp LEFT_SHIFT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE      &kp LS(GRAVE)     &kp LS(LEFT_BRACKET)  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE         &kp PLUS           &kp N7  &kp N8   &kp N9  &kp ASTERISK  &trans
&trans         &kp LA(DELETE)    &trans                &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER        &kp MINUS          &kp N4  &kp N5   &kp N6  &kp DOT       &trans
&kp LG(GRAVE)  &kp LC(NUMBER_1)  &kp LC(NUMBER_2)      &kp LC(TAB)           &kp LG(TAB)            &kp BACKSLASH    &kp EQUAL          &kp N1  &kp N2   &kp N3  &kp N0        &trans
                                                       &kp LGUI              &trans                 &kp SPACE        &kp LA(BACKSPACE)  &kp N0  &kp DOT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp EXCL      &kp AT        &kp HASH          &kp DLLR           &kp PRCNT    &kp CARET  &kp AMPS       &kp KP_MULTIPLY  &kp SEMI   &kp COLON          &trans
&kp DELETE  &trans        &trans        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans       &kp LEFT   &kp DOWN       &kp UP           &kp RIGHT  &kp SINGLE_QUOTE   &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &trans            &trans             &trans       &kp END    &kp PAGE_DOWN  &kp PAGE_UP      &kp HOME   &kp DOUBLE_QUOTES  &trans
                                        &kp LGUI          &trans             &kp SPACE    &kp RET    &trans         &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp F1  &kp F2                &trans                    &trans         &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp C_BRIGHTNESS_DEC  &kp LG(C_BRIGHTNESS_INC)  &kp LG(MINUS)  &kp LG(PLUS)    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP           &kp C_MUTE     &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                      &trans                    &trans         &trans          &trans  &trans  &trans
            >;
        };
    };
};
